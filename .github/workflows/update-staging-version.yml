on:
  push:
    tags:
      # Run this for all tags starting with v. E.g. v2.4.1
      - v*

name: Update version file and create PR
env:
  BRANCH: ${{ github.event.after }}-staging-version-update
  # TEMP_BRANCH can't start with the same string as BRANCH, or the create-pull-request 
  # action will get confused and complain.
  TEMP_BRANCH: ${{ github.event.after }}-temp-staging-version-update
  BASE_BRANCH: dev

jobs:
  version-pr:
    name: Make version update PR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout tag
        uses: actions/checkout@v2
      - name: Create branch from tag
        run: |
          git config --global user.name '${{ github.actor }}'
          git config --global user.email '${{ github.actor }}@users.noreply.github.com'
          git checkout -b ${{ env.TEMP_BRANCH }}
          git push --set-upstream origin ${{ env.TEMP_BRANCH }}

      - name: Update version file
        run: |
          ./.github/scripts/update-version-file.sh ${{ github.ref }}

      - name: Commit version file
        run: |
          git add .github/staging-version
          git config --global user.name '${{ github.actor }}'
          git config --global user.email '${{ github.actor }}@users.noreply.github.com'
          git commit -m "Automatically updated version file to ${{ github.ref }} on tag push."

      - name: Fail if not synced with base branch
        run: |
          # This verifies that there is only one file changed between base and this branch,
          # that the file is our version file, and that only one line has changed.
          # If these criteria are not met, the action fails here and no pr is made.
          git fetch origin ${{ env.BASE_BRANCH }}:${{ env.BASE_BRANCH }}
          [ '1 1 .github/staging-version' = "`git diff --numstat --no-color ${{ env.BASE_BRANCH }} HEAD -- | xargs`" ]
      - name: Push and create pull request
        uses: peter-evans/create-pull-request@v2
        if: ${{ success() }}
        with:
          branch: ${{ env.BRANCH }}
          base: ${{ env.BASE_BRANCH }}
          title: 'Release ${{ github.ref }} to staging' 
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
      - name: Delete temporary tag branch
        if: ${{ always() }}
        run: |
          git push --delete origin ${{ env.TEMP_BRANCH }}
